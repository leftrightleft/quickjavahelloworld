# # This is a basic workflow to help you get started with Actions

# name: CodeQL CLI test

# # Controls when the action will run. 
# on:
#   push:
#     paths:
#       - '.github/workflows/codeql-build.yml'
#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2
      
#       - uses: actions/setup-java@v1.4.3
#         with:
#           java-version: 8

#       - name: Install Bazel package source
#         run: |
#           sudo apt install apt-transport-https curl gnupg
#           curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg
#           sudo mv bazel.gpg /etc/apt/trusted.gpg.d/
#           echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
#       - name: Install Bazel
#         run: sudo apt update && sudo apt install bazel
        
#       - name: Fetch CodeQL
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run: | 
#           LATEST=$(gh release list --repo https://github.com/github/codeql-cli-binaries | cut -f 1 | sort --version-sort | tail -1)
#           gh release download --repo https://github.com/github/codeql-cli-binaries --pattern codeql-linux64.zip "$LATEST"
#           unzip -q codeql-linux64.zip

#       - name: Create CodeQL database
#         run: |
#           set -x
#           bazel shutdown
#           bazel clean --expunge
#           codeql/codeql database create --source-root . --language java -vvvv --log-to-stderr --command "bazel build --spawn_strategy=local --nouse_action_cache --modify_execution_info MNEMONIC=+no-cache //:app" java-db
          
#       - name: Print logs
#         if: always()
#         run: |
#           cat java-db/log/build-tracer.log
